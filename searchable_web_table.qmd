---
title: "Making a searchable database table"
author: "Aaron Kessler"
format:
  html:
    self-contained: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(DT)
library(janitor)
library(httr)
library(jsonlite)
library(kableExtra)
library(here)
library(readxl) 
library(scales)
library(ggthemes)
library(ggplot2)
library(esquisse)

#### PRESIDENTIAL CANDIDATE TRIPS ####


```
```{r}
# Load in data of Virginia Governors Race
vaelection <- readRDS("joined_vacomparison.rds")


vaelection <- vaelection %>% 
  clean_names() %>% select( - youngkin_overperform)

vaelection
```

## Using DT to make a searchable table

```{r}
#### MAKING A SEARCHABLE TABLE FOR THE WEB ####

# First -- let's talk about: what is the Internet? What IS a web page?
# An oldie but a goodie from 2009: https://www.youtube.com/watch?v=7_LPdttKXPc
# Bottom line, it's just a bunch of computers connected to each other. 
# A website? It's just files on someone else's computer (aka server)
```


```{r}
#We can use the "DT" package to easily make a sortable, filterable, searchable data table
#Just this little bit of code does a whole lot - check it out:

DT::datatable(vaelection)

```


```{r}
#We can already sort, but what if we want to allow the table to be FILTERED too?

DT::datatable(vaelection, 
              rownames = FALSE, 
              filter = "top")
```


```


```{r}
#Now, for the coup de gr?ce
#let's add some buttons at the top of the page to let people copy, download, etc
#we do that using a DT "extenstion" called, you guessed it, Buttons
# https://rstudio.github.io/DT/extensions.html

vaelection_DT <- DT::datatable(vaelection, 
              rownames = FALSE, 
              filter = "top", 
              extensions = 'Buttons', 
              options = list(   
                dom = 'Bfrtip',
                buttons = c('copy', 'csv', "excel")
              )) %>%
  DT::formatStyle('locality', fontWeight = 'bold')
```


```{r}
## saving the result

# ... then just run this simple bit of code to export to html
DT::saveWidget(vaelection_DT, "vaelection_DT.html")


# We've now created a working web page that can be put anywhere on the internet we choose
# Yay!

# If we stay within the world of quarto though we don't need to export it, we can just display it
# within the quarto page of course
```



