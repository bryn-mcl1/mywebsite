[
  {
    "objectID": "walkthrough.html",
    "href": "walkthrough.html",
    "title": "Analysis Walkthrough Example",
    "section": "",
    "text": "Run the code below to load the data.\nIt will create a dataframe called impeach, which contains a row for every House Democrat and whether or not the member publicly called for impeachment in the case of the first Trump impeachment.\nAdditionally, a series of election results and demographics are included related to each member’s district.\n\n\nCode\nimpeach <- readRDS(\"impeach.rds\")\n\n\n\n\n\nWrite your code using grouping in the chunks below to help answer the following questions.\n\nHow many members in the dataset favor impeachment vs. not (using the for_impeachment column)?\n\n\n\nCode\nimpeach %>% \n  group_by(for_impeachment) %>% \n  summarise(n())\n\n\n# A tibble: 2 × 2\n  for_impeachment `n()`\n  <chr>           <int>\n1 NO                 26\n2 YES               209\n\n\nCode\n#grouped by for impeachment than summarized\n\n\n\nSimilar to #1 above, using grouping to now break down the Democratic House members by TWO measures: those who are for or against impeachment (as you did above)….and then districts above/below national GDP.\n\nYou’ll want to ensure you do the grouping on both columns together, e.g. group_by(column1, column2)\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment,gdp_above_national) %>% \n  summarise(n())\n\n\n`summarise()` has grouped output by 'for_impeachment'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 4 × 3\n# Groups:   for_impeachment [2]\n  for_impeachment gdp_above_national `n()`\n  <chr>           <chr>              <int>\n1 NO              ABOVE                  7\n2 NO              BELOW                 19\n3 YES             ABOVE                126\n4 YES             BELOW                 83\n\n\nCode\n#filtered for Dems, grouped by for impeachment and national gdp, then summarized\n\n\n\nNow do the same as #2, but this time instead of GDP, group by whether the district is above or below the national average for the percentage of college graduates. The column that captures this information is pct_bachelors_compared_to_national.\n\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment,pct_bachelors_compared_to_national) %>% \n  summarise(n())\n\n\n`summarise()` has grouped output by 'for_impeachment'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 4 × 3\n# Groups:   for_impeachment [2]\n  for_impeachment pct_bachelors_compared_to_national `n()`\n  <chr>           <chr>                              <int>\n1 NO              ABOVE                                  7\n2 NO              BELOW                                 19\n3 YES             ABOVE                                128\n4 YES             BELOW                                 81\n\n\nCode\n#filtered for Dems, grouped by for impeachment and pct bachelors, then summarized.\n\n\n\nLet’s look at the college graduation comparison in a slightly different way.\n\nInstead of counting how many districts are above/below the national average, this time summarize by the MEAN percentage of college grads (located in the column pct_bachelors) for districts that are Yes for impeachment vs. No.\nIn other words, you want to end up with the calculated mean for what that percentage is for the Yes districts and the No districts.\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment) %>% \n  summarise(mean(pct_bachelors))\n\n\n# A tibble: 2 × 2\n  for_impeachment `mean(pct_bachelors)`\n  <chr>                           <dbl>\n1 NO                               27.7\n2 YES                              33.7\n\n\nCode\n#filtered for Dems, grouped by for impeachment, then summarized using the mean of percent of pop w bachelors degree.\n\n\n\nDo the same as #4, but this time show the MEAN percentage of the vote that Donald Trump received for districts that are Yes for impeachment vs. No.\nThe relevant column for that is trump_percent.\n\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment) %>% \n  summarise(mean(trump_percent))\n\n\n# A tibble: 2 × 2\n  for_impeachment `mean(trump_percent)`\n  <chr>                           <dbl>\n1 NO                               43.8\n2 YES                              32.0\n\n\nCode\n#filtered for Dems, grouped by for impeachment, then summarized with mean of pop that voted for Trump.\n\n\n\nFilter out only the members who are a yes for impeachment. Then of those “Yes” member, how many won their 2018 election by less than 5 percentage points (margin_flag_2018) vs. more?\n\n\n\nCode\nimpeach %>% \n  filter(party == \"D\", for_impeachment == \"YES\" ) %>% \n  group_by(margin_flag_2018) %>% \n  summarise(n())\n\n\n# A tibble: 2 × 2\n  margin_flag_2018   `n()`\n  <chr>              <int>\n1 5_points_or_less      17\n2 more_than_5_points   192\n\n\nCode\n#Filtered for Dems who voted YES, grouped by 2018 margin, then summarized.\n\n\n\nCome up with another breakdown of your choosing for how you’d like to examine this dataset. Say what you’ll look at, and then put the code below to find the answer.\n\n\n\nCode\n#I want to look at the state breakdown of reps who voted no on impeachment.\n\nimpeach %>% \n  filter(for_impeachment==\"NO\") %>% \n  group_by(state) %>% \n  summarise(n())\n\n\n# A tibble: 20 × 2\n   state `n()`\n   <chr> <int>\n 1 AL        1\n 2 AZ        1\n 3 FL        2\n 4 GA        1\n 5 HI        1\n 6 IL        1\n 7 KS        1\n 8 ME        1\n 9 MN        1\n10 NJ        1\n11 NM        1\n12 NV        2\n13 NY        2\n14 OK        1\n15 OR        1\n16 PA        1\n17 SC        1\n18 TX        4\n19 UT        1\n20 WI        1\n\n\nCode\n#I used this function to explore what states were most prevelent among reps voting NO on impeachment. I filtered for NO, grouped by state, and summarized.\n\n\n\nYou’ll see a column in the table called date_announced. For members who came out as a Yes for impeachment, this is the date they announced their support for it.\n\nUse the mutate() function to create two new columns: one that extracts the year from date_announced, and a second that extracts the month.\n\n\nCode\nimpeach <- impeach %>%\n  mutate(year_ann = year(date_announced),\n        month_ann = month(date_announced))\n\n\n#I made sure to use the <- function to save the change, then used mutate to create a new year and new month column from date_announced.\n\n\n\nUsing the new columns you created in #7, use grouping to count up how many House Democrats during each month announced their support of impeachment.\n\n\n\nCode\nimpeach %>%\n  group_by(month_ann, for_impeachment) %>% \n  summarise(n())\n\n\n`summarise()` has grouped output by 'month_ann'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 3\n# Groups:   month_ann [10]\n   month_ann for_impeachment `n()`\n       <dbl> <chr>           <int>\n 1         1 YES                 3\n 2         4 YES                 7\n 3         5 YES                39\n 4         6 YES                27\n 5         7 YES                33\n 6         8 YES                18\n 7         9 YES                76\n 8        11 YES                 2\n 9        12 YES                 4\n10        NA NO                 26\n\n\nCode\n#I grouped the month and for impeachment columns, then summarized."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bryn’s Website",
    "section": "",
    "text": "Hi, I’m Bryn and I will be graduating from GW in May. I have a bachelors degree in Political Communication and look forward to exploring life after college."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Bryn’s Website",
    "section": "Education",
    "text": "Education\nThe George Washington University\nSchool of Media and Public Affairs"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Bryn’s Website",
    "section": "Skills",
    "text": "Skills\nMedia Monitoring\nResearch Analysis\nAdvocacy & Campaigns"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Hi there this is my portfolio page!"
  },
  {
    "objectID": "portfolio.html#press-release-writing-sample",
    "href": "portfolio.html#press-release-writing-sample",
    "title": "Portfolio",
    "section": "Press Release Writing Sample",
    "text": "Press Release Writing Sample\nThis writing sample is a press release on behalf of Physicians for Human Rights (PHR), a New York-based advocacy organization that uses science and medicine to prevent mass atrocities and severe human rights violations."
  },
  {
    "objectID": "portfolio.html#journalistic-writing-sample",
    "href": "portfolio.html#journalistic-writing-sample",
    "title": "Portfolio",
    "section": "Journalistic Writing Sample",
    "text": "Journalistic Writing Sample\nHere is a story on a panel held by The Atlantic Council’s Global Energy Center on energy grid reliability. The event was held in the wake of mass power outages following a winter storm in Texas."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "More Stuff About Me",
    "section": "",
    "text": "About this site\nHere is some new stuff!\n\n1 + 1 \n\n[1] 2"
  }
]