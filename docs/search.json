[
  {
    "objectID": "virginia election project.html",
    "href": "virginia election project.html",
    "title": "virginia election database table",
    "section": "",
    "text": "#Here is an explorable data table with the results of the 2020 Presidential Election, as well as the 2021 Virginia Gubernatorial Race\n#here is code to create a new column to the dataset calculating the difference between the percentage of the vote Youngkin received and what Trump received.\n\n\n\n#Here is a new column to find the Top 5 counties with the highest differences between Younkin/Trump percent, and then create a well-labeled chart to visualize them.\n\n\n\n#Here is a chart that shows the Top 5 counties based on where Youngkin got the highest percentage of the vote.\n\n\n\n#Here is a table that shows the Top 5 counties based on where McCauliffe got the highest percentage of the vote.\n\n\n\n#Here is a finding of your choosing, include a narrative explaing it to the audience and then create either a chart or table displaying it.\n\n\n\n#Here is a second finding of your choosing, include a narrative explaining it to the audience and then create either a chart or table displaying it.\n\n\n\n#Here is a third finding of your choosing, include a narrative explaining it to the audience and then create either a chart or table displaying it."
  },
  {
    "objectID": "walkthrough.html",
    "href": "walkthrough.html",
    "title": "Analysis Walkthrough Example",
    "section": "",
    "text": "Run the code below to load the data.\nIt will create a dataframe called impeach, which contains a row for every House Democrat and whether or not the member publicly called for impeachment in the case of the first Trump impeachment.\nAdditionally, a series of election results and demographics are included related to each member’s district.\n\n\nCode\nimpeach <- readRDS(\"impeach.rds\")\n\n\n\n\n\nWrite your code using grouping in the chunks below to help answer the following questions.\n\nHow many members in the dataset favor impeachment vs. not (using the for_impeachment column)?\n\n\n\nCode\nimpeach %>% \n  group_by(for_impeachment) %>% \n  summarise(n())\n\n\n# A tibble: 2 × 2\n  for_impeachment `n()`\n  <chr>           <int>\n1 NO                 26\n2 YES               209\n\n\nCode\n#grouped by for impeachment than summarized\n\n\n\nSimilar to #1 above, using grouping to now break down the Democratic House members by TWO measures: those who are for or against impeachment (as you did above)….and then districts above/below national GDP.\n\nYou’ll want to ensure you do the grouping on both columns together, e.g. group_by(column1, column2)\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment,gdp_above_national) %>% \n  summarise(n())\n\n\n`summarise()` has grouped output by 'for_impeachment'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 4 × 3\n# Groups:   for_impeachment [2]\n  for_impeachment gdp_above_national `n()`\n  <chr>           <chr>              <int>\n1 NO              ABOVE                  7\n2 NO              BELOW                 19\n3 YES             ABOVE                126\n4 YES             BELOW                 83\n\n\nCode\n#filtered for Dems, grouped by for impeachment and national gdp, then summarized\n\n\n\nNow do the same as #2, but this time instead of GDP, group by whether the district is above or below the national average for the percentage of college graduates. The column that captures this information is pct_bachelors_compared_to_national.\n\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment,pct_bachelors_compared_to_national) %>% \n  summarise(n())\n\n\n`summarise()` has grouped output by 'for_impeachment'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 4 × 3\n# Groups:   for_impeachment [2]\n  for_impeachment pct_bachelors_compared_to_national `n()`\n  <chr>           <chr>                              <int>\n1 NO              ABOVE                                  7\n2 NO              BELOW                                 19\n3 YES             ABOVE                                128\n4 YES             BELOW                                 81\n\n\nCode\n#filtered for Dems, grouped by for impeachment and pct bachelors, then summarized.\n\n\n\nLet’s look at the college graduation comparison in a slightly different way.\n\nInstead of counting how many districts are above/below the national average, this time summarize by the MEAN percentage of college grads (located in the column pct_bachelors) for districts that are Yes for impeachment vs. No.\nIn other words, you want to end up with the calculated mean for what that percentage is for the Yes districts and the No districts.\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment) %>% \n  summarise(mean(pct_bachelors))\n\n\n# A tibble: 2 × 2\n  for_impeachment `mean(pct_bachelors)`\n  <chr>                           <dbl>\n1 NO                               27.7\n2 YES                              33.7\n\n\nCode\n#filtered for Dems, grouped by for impeachment, then summarized using the mean of percent of pop w bachelors degree.\n\n\n\nDo the same as #4, but this time show the MEAN percentage of the vote that Donald Trump received for districts that are Yes for impeachment vs. No.\nThe relevant column for that is trump_percent.\n\n\n\nCode\nimpeach %>% \n  filter(party == \"D\") %>% \n  group_by(for_impeachment) %>% \n  summarise(mean(trump_percent))\n\n\n# A tibble: 2 × 2\n  for_impeachment `mean(trump_percent)`\n  <chr>                           <dbl>\n1 NO                               43.8\n2 YES                              32.0\n\n\nCode\n#filtered for Dems, grouped by for impeachment, then summarized with mean of pop that voted for Trump.\n\n\n\nFilter out only the members who are a yes for impeachment. Then of those “Yes” member, how many won their 2018 election by less than 5 percentage points (margin_flag_2018) vs. more?\n\n\n\nCode\nimpeach %>% \n  filter(party == \"D\", for_impeachment == \"YES\" ) %>% \n  group_by(margin_flag_2018) %>% \n  summarise(n())\n\n\n# A tibble: 2 × 2\n  margin_flag_2018   `n()`\n  <chr>              <int>\n1 5_points_or_less      17\n2 more_than_5_points   192\n\n\nCode\n#Filtered for Dems who voted YES, grouped by 2018 margin, then summarized.\n\n\n\nCome up with another breakdown of your choosing for how you’d like to examine this dataset. Say what you’ll look at, and then put the code below to find the answer.\n\n\n\nCode\n#I want to look at the state breakdown of reps who voted no on impeachment.\n\nimpeach %>% \n  filter(for_impeachment==\"NO\") %>% \n  group_by(state) %>% \n  summarise(n())\n\n\n# A tibble: 20 × 2\n   state `n()`\n   <chr> <int>\n 1 AL        1\n 2 AZ        1\n 3 FL        2\n 4 GA        1\n 5 HI        1\n 6 IL        1\n 7 KS        1\n 8 ME        1\n 9 MN        1\n10 NJ        1\n11 NM        1\n12 NV        2\n13 NY        2\n14 OK        1\n15 OR        1\n16 PA        1\n17 SC        1\n18 TX        4\n19 UT        1\n20 WI        1\n\n\nCode\n#I used this function to explore what states were most prevelent among reps voting NO on impeachment. I filtered for NO, grouped by state, and summarized.\n\n\n\nYou’ll see a column in the table called date_announced. For members who came out as a Yes for impeachment, this is the date they announced their support for it.\n\nUse the mutate() function to create two new columns: one that extracts the year from date_announced, and a second that extracts the month.\n\n\nCode\nimpeach <- impeach %>%\n  mutate(year_ann = year(date_announced),\n        month_ann = month(date_announced))\n\n\n#I made sure to use the <- function to save the change, then used mutate to create a new year and new month column from date_announced.\n\n\n\nUsing the new columns you created in #7, use grouping to count up how many House Democrats during each month announced their support of impeachment.\n\n\n\nCode\nimpeach %>%\n  group_by(month_ann, for_impeachment) %>% \n  summarise(n())\n\n\n`summarise()` has grouped output by 'month_ann'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 3\n# Groups:   month_ann [10]\n   month_ann for_impeachment `n()`\n       <dbl> <chr>           <int>\n 1         1 YES                 3\n 2         4 YES                 7\n 3         5 YES                39\n 4         6 YES                27\n 5         7 YES                33\n 6         8 YES                18\n 7         9 YES                76\n 8        11 YES                 2\n 9        12 YES                 4\n10        NA NO                 26\n\n\nCode\n#I grouped the month and for impeachment columns, then summarized."
  },
  {
    "objectID": "searchable_web_table.html",
    "href": "searchable_web_table.html",
    "title": "Making a searchable database table",
    "section": "",
    "text": "# Load in data of Virginia Governors Race\nvaelection <- readRDS(\"joined_vacomparison.rds\")\n\n\nvaelection <- vaelection %>% \n  clean_names() %>% select( - youngkin_overperform)\n\nvaelection\n\n# A tibble: 133 × 9\n   locality          biden trump biden…¹ trump…² young…³ mcaul…⁴ pct_y…⁵ pct_m…⁶\n   <chr>             <dbl> <dbl>   <dbl>   <dbl>   <int>   <int>   <dbl>   <dbl>\n 1 ACCOMACK COUNTY    7578  9172    44.7    54.1    7878    4948    61.1    38.4\n 2 ALBEMARLE COUNTY  42466 20804    65.7    32.2   19141   31919    37.2    62.0\n 3 ALEXANDRIA CITY   66240 14544    80.3    17.6   14013   43866    24.0    75.2\n 4 ALLEGHANY COUNTY   2243  5859    27.3    71.4    4530    1518    74.5    25.0\n 5 AMELIA COUNTY      2411  5390    30.6    68.3    4720    1617    74.2    25.4\n 6 AMHERST COUNTY     5672 11041    33.4    64.9    9731    3897    71      28.4\n 7 APPOMATTOX COUN…   2418  6702    26.1    72.3    5971    1438    80.3    19.3\n 8 ARLINGTON COUNTY 105344 22318    80.6    17.1   21548   73013    22.6    76.7\n 9 AUGUSTA COUNTY    10840 30714    25.6    72.6   26196    7231    77.9    21.5\n10 BATH COUNTY         646  1834    25.8    73.3    1539     396    79.0    20.3\n# … with 123 more rows, and abbreviated variable names ¹​biden_pct, ²​trump_pct,\n#   ³​youngkin, ⁴​mcauliffe, ⁵​pct_youngkin, ⁶​pct_mcauliffe"
  },
  {
    "objectID": "searchable_web_table.html#using-dt-to-make-a-searchable-table",
    "href": "searchable_web_table.html#using-dt-to-make-a-searchable-table",
    "title": "Making a searchable database table",
    "section": "Using DT to make a searchable table",
    "text": "Using DT to make a searchable table\n\n#### MAKING A SEARCHABLE TABLE FOR THE WEB ####\n\n# First -- let's talk about: what is the Internet? What IS a web page?\n# An oldie but a goodie from 2009: https://www.youtube.com/watch?v=7_LPdttKXPc\n# Bottom line, it's just a bunch of computers connected to each other. \n# A website? It's just files on someone else's computer (aka server)\n\n\n#We can use the \"DT\" package to easily make a sortable, filterable, searchable data table\n#Just this little bit of code does a whole lot - check it out:\n\nDT::datatable(vaelection)\n\n\n\n\n\n\n\n#We can already sort, but what if we want to allow the table to be FILTERED too?\n\nDT::datatable(vaelection, \n              rownames = FALSE, \n              filter = \"top\")\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Now, for the coup de gr?ce\n#let's add some buttons at the top of the page to let people copy, download, etc\n#we do that using a DT \"extenstion\" called, you guessed it, Buttons\n# https://rstudio.github.io/DT/extensions.html\n\nvaelection_DT <- DT::datatable(vaelection, \n              rownames = FALSE, \n              filter = \"top\", \n              extensions = 'Buttons', \n              options = list(   \n                dom = 'Bfrtip',\n                buttons = c('copy', 'csv', \"excel\")\n              )) %>%\n  DT::formatStyle('locality', fontWeight = 'bold')\n:::\n\n## saving the result\n\n# ... then just run this simple bit of code to export to html\nDT::saveWidget(vaelection_DT, \"vaelection_DT.html\")\n\n\n# We've now created a working web page that can be put anywhere on the internet we choose\n# Yay!\n\n# If we stay within the world of quarto though we don't need to export it, we can just display it\n# within the quarto page of course"
  },
  {
    "objectID": "academic.html",
    "href": "academic.html",
    "title": "Academic Research",
    "section": "",
    "text": "The following sample is taken from my research essay “Honor and Love of Ladies: Chivalry in the Age of Shakespeare”, which details the deterioration of knightly chivalric code in the context of Shakespeare. The essay was presented in the format of an art exhibition, and numbered figures, for example (fig. 2), are referenced throughout the essay regarding artwork that would be included in the exhibition.\nChivalry, Women, and Broken Codes of Honor\nThe most notable and first organization of knights in British history was the Order of the Garter, founded by King Edward III in 1348. According to legend, the Order was named after an incident at a ball in Calais, France, in which the king’s dancing partner’s garter fell off on the dance floor. Rather than laugh like other guests at the party, King Edward honorably returned the garter to the lady and said: “honi soit, qui mal y pense,” or “Evil be on him who thinks it.”[1] This phrase became the motto of the Order, and exemplifies respect towards women as one of the key values of their knights. This chivalrous view towards women is captured in the The Booke of Honor and Armes by Richard Jones, which depicts two knights locked in tournament combat for the “honor and love of ladies” (fig. 8). Just as the martial component of knighthood was romanticised, so too was the amorous component of courtly life. In the 12th century, the Church made two important changes to marriage: it became a sacrament, and was only valid with the consent of both partners.[2] Suitors were now able to choose their partners, however their options to exit a marriage were strictly limited; this change led to a focus on eros (love) rather than the traditional platonic agape relationship.[3] As relationships became more focused on attraction and compatibility rather than political and financial calculations, knights were expected to win their lady over through public displays of prowess and valour, particularly in tournament games.[4] This tournament ‘peacocking’ for female attention was based directly off of a scene from Arthurian literature where Sir Lancelot jousts for his watching lady, Guinevere.\nIn his play The Merry Wives of Windsor, Shakespeare directly satirizes knightly values towards respecting women through the character Sir Falstaff, a sorry excuse of a knight who indulges in all the sins from which knights are supposed to abstain. The Merry Wives of Windsor was written for Queen Elizabeth to celebrate the Feast of St. George, patron saint of the Order of the Garter, and though the event was solemn Shakespeare chose to make the play a comedy. In the story, the cowardly Falstaff attempts to seduce two married women for personal gain and abuses his status as a knight. The wives are not fooled, but they play along with Falstaff’s affections in order to lure him out into the woods, as depicted in Figure 5. On his head Falstaff wears a pair of deer antlers meant to symbolize Hern the Hunter, representing his status as a predator towards women instead of a protector. The women soon get their revenge on Falstaff, however, as children dressed as fairies surround and taunt him, singing:\nFie on sinful fantasy! Fie on lust and luxury! Lust is but a bloody fire, Kindled with unchaste desire, Fed in heart, whose flames aspire, As thoughts do blow them, higher and higher. Pinch him, fairies, mutually! Pinch him for his villainy! Pinch him, and burn him, and turn him about, Till candles, and starlight, and moonshine be out. (5.5.93–102)\nThis reproachful scene was performed in front of Knights of the Garter themselves, and may have served as a tongue in cheek opportunity for Shakespeare to critique the elite class, disguised as sharp-witted comedy.[5] Shakespeare does not criticize the institution of knighthood itself, but rather the failure by individual members who are unable to uphold their organization’s key values.\n            Another example of the withering standards of knighthood during the Elizabethan era is referenced in II Henry IV, when the character Cade dubs himself a knight prior to battle with Sir Humphrey in order to intimidate his opponent.[6] This scene is satirizing the disregard for tradition and the honorable actions through which the title of knight is earned, and would likely have resonated with an Elizabethean audience due to a recent scandal involving one of the high-ranking members of the Order of the Garter, Robert Devereux, Earl of Essex (fig. 2). In the portrait Devereux can be seen wearing a jeweled pendant depicting St. George, patron saint of the Order, and his white doublet’s color is closely associated with Queen Elizabeth, the Virgin Queen. Though once a favorite of the queen, Devereux began his fall from her favor during his unsuccessful Irish campaign in the 1590s when he hastily created 59 new knights, more than doubling the number existing in the realm and diluting the prestige of the position even further.[7] The political indiscretions of Devereux drew criticism from Queen Elizabeth and many others, forcing the public to reevaluate whether members of honorable institutions like the Order were capable of maintaining their chivalric ideals in a shifting social and political landscape.\nBibliography\nCartwright, Mark. “Order of the Garter.” Ancient History Encyclopedia. Ancient History Encyclopedia, May 3, 2020. https://www.ancient.eu/Order_of_the_Garter/.\n “Charles I and the Order of the Garter.” Journal of British Studies 52, no. 2 (2013): 343-69. Accessed April 16, 2020. www.jstor.org/stable/41999293.\nHarlan, Susan. “‘Certain Condolements, Certain Vails’: Staging Rusty Armour in Shakespeare’s Pericles.” Early Theatre 11, no. 2 (September 3, 2014).\nHIGHAM, NICHOLAS J. King Arthur: The Making of the Legend. NEW HAVEN; LONDON: Yale University Press, 2018. Accessed April 8, 2020. www.jstor.org/stable/j.ctv7cjvt7, 217.\n“Lance Head for the Joust of Peace.” metmuseum.org. The Metropolitan Museum of Art. Accessed May 5, 2020. https://www.metmuseum.org/art/collection/search/24707.\nNickel, Helmut, Stuart W Pyhhr, and Leonid Tarassuk. The Art of Chivalry: European Arms and The Metropolitan Museum of Art. New York, NY: The Metropolitan Museum of Art, 1975.\nOrtego, James N. “Seeking the Medieval in Shakespeare: The Order of the Garter and the Topos of Derisive Chivalry.” In Fifteenth-Century Studies 35, edited by Heintzelman Matthew Z., Gusick Barbara I., and Walsh Martin W., 80-104. Rochester, NY; Woodbridge, Suffolk: Boydell & Brewer, 2010. Accessed April 16, 2020. doi:10.7722/j.ctt81rks.10.\nPyhrr, Stuart W., Donald J. LaRocca, and Dirk H. Breiding. The Armored Horse in Europe, 1480-1620. New York: Metropolitan Museum of Art, 2005.\nSAUL, NIGEL. “Chivalry and Women.” In Chivalry in Medieval England, 262-82. Cambridge, Massachusetts: Harvard University Press, 2011. Accessed May 5, 2020. www.jstor.org/stable/j.ctt2jbvtm.19.\nSAUL, NIGEL. “The Decline of Chivalry.” In Chivalry in Medieval England, 347-63. Cambridge, Massachusetts: Harvard University Press, 2011. Accessed May 4, 2020. www.jstor.org/stable/j.ctt2jbvtm.23."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bryn’s Website",
    "section": "",
    "text": "Hi, I’m Bryn and I will be graduating from GW in May. I have a bachelors degree in Political Communication and look forward to exploring life after college."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Bryn’s Website",
    "section": "Education",
    "text": "Education\nThe George Washington University\nSchool of Media and Public Affairs"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Bryn’s Website",
    "section": "Skills",
    "text": "Skills\nMedia Monitoring\nResearch Analysis\nAdvocacy & Campaigns"
  },
  {
    "objectID": "newsstory.html",
    "href": "newsstory.html",
    "title": "Journalistic Writing",
    "section": "",
    "text": "The following sample is taken from a journalistic article I wrote on a panel hosted by The Atlantic Council’s Global Energy.\nEnergy experts met online Thursday to discuss the urgency of increasing the United States’ energy grid reliability, as Texans continue to struggle with the effects of mass power shortages following severe winter storms.\nThe virtual event, hosted by The Atlantic Council’s Global Energy Center, gathered representatives from various academic and corporate organizations to talk about the energy failures leading up to the recent cold weather crisis in the state of Texas.\nLast week’s winter storm left dozens of Texans dead and millions without power as record setting low temperatures caused cascading failures throughout the state’s energy grid. According to a report by the Texas Tribune, analysts are already predicting that the winter storm has the potential to be the costliest natural disaster in the state’s history, even worse than the $125 billion in damage caused by Hurricane Harvey in 2017.\nExperts on the panel identified two primary causes for the energy issues caused by the storm: the state power grid’s independence from the national power grid, and lack of winterization measures by the Electric Reliability Council of Texas, or ERCOT.\nDue to the lack of power transmission capabilities with other states, the majority of Texas was unable to import power from surrounding states to supplement the rise in demand during the storm. The few parts of the state that are connected to the national grid, including El Paso, did not face the same issues as a majority of the population.\nThe second primary cause of the energy crisis was the lack of winterization measures by ERCOT, the primary organization that operates the state’s electric grid. Michael Webber, who is the chief science and technology officer at commercial energy provider ENGIE, outlined how the state’s reliance on unwinterized natural gas providers backfired as low temperatures caused water within the gas supply to freeze, preventing the energy source from being pumped and accessed. At the peak of demand during the storm, 48% of the state’s power capacity was rendered unavailable.\nVideos blaming the power shortage on renewable energy efforts in the state quickly went viral after Republican Gov. Greg Abbott appeared in a Fox News interview, blaming wind turbines and the Green New Deal for power deficiencies across the state. During the Atlantic Council meeting, Grid Strategies President Rob Gramlich refuted claims that renewable energy is to blame for the majority of energy loss.\n“It’s clearly false. You know, a few gigawatts of wind loss, maybe about 10 percent of the total loss, is not the problem...if 10% is a problem, what’s going on with the other 90%?” Gramlich asked.\nBen Hertz-Shargel, head of data science and technology at renewable energy company Rhythm, emphasized the importance of energy transmission between regions in preventing system failures. By connecting to neighboring energy grids, Texas would be able to rely on backup systems of power for future emergencies. Additional preventative measures discussed by panelists included stronger state and federal regulatory structures for energy winterization, diversification of fuel sources to fill potential gaps in resource grid capabilities and winterizing individual homes to decrease demand on energy grids during extreme weather events.\nHeather Rock, director of climate resilience at the Pacific Gas and Electric Company, warned of the danger of companies running their energy systems to failure. As extreme weather conditions become more frequent, system failures will have increasingly severe consequences on communities the grids support. In order to prevent these failures, Rock acknowledged that a prospective, long-term approach is necessary for the modernization of American power grids.\n“Our critical infrastructure nationwide is a system that was designed to operate in the conditions of the past. Now we need to think of extreme weather conditions, and chronic conditions, too, like sea level rise, not as unprecedented, but as expected,” Rock said."
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Hi there this is my portfolio page!"
  },
  {
    "objectID": "portfolio.html#press-release-writing-sample",
    "href": "portfolio.html#press-release-writing-sample",
    "title": "Portfolio",
    "section": "Press Release Writing Sample",
    "text": "Press Release Writing Sample\nThis writing sample is a press release on behalf of Physicians for Human Rights (PHR), a New York-based advocacy organization that uses science and medicine to prevent mass atrocities and severe human rights violations."
  },
  {
    "objectID": "portfolio.html#journalistic-writing-sample",
    "href": "portfolio.html#journalistic-writing-sample",
    "title": "Portfolio",
    "section": "Journalistic Writing Sample",
    "text": "Journalistic Writing Sample\nHere is a story on a panel held by The Atlantic Council’s Global Energy Center on energy grid reliability. The event was held in the wake of mass power outages following a winter storm in Texas."
  },
  {
    "objectID": "Mapping.html",
    "href": "Mapping.html",
    "title": "Interactive Maps Walkthrough",
    "section": "",
    "text": "Here is a walkthrough of how I created an interactive map of Pennsylvania, showing the active labor force distribution by county.\n\n\nInteractive Maps with MapView Package\n\n# uncomment to run, then recomment it out so you don't run it every time\n\n#census_api_key(\"KEY\", install=TRUE)\n\n\n#chose variables we want\nmyvars <- c(totalpop = \"B01003_001\",\n            medincome = \"B19013_001\",\n            medage = \"B01002_001\",\n            labor_force = \"B23001_001\")\n\n\n#pull for VA counties\npa_counties_withgeo <- get_acs(geography = \"county\",\n                       variables = c(myvars),\n                       state = \"PA\",\n                       output = \"wide\",\n                       geometry = TRUE)\n\nGetting data from the 2017-2021 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |==========================================                            |  61%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n\npa_counties_withgeo\n\nSimple feature collection with 67 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.51989 ymin: 39.7198 xmax: -74.68952 ymax: 42.26986\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                                NAME totalpopE totalpopM medincomeE\n1  42129   Westmoreland County, Pennsylvania    355107        NA      64708\n2  42111       Somerset County, Pennsylvania     74331        NA      54332\n3  42097 Northumberland County, Pennsylvania     91853        NA      51005\n4  42131        Wyoming County, Pennsylvania     26389        NA      62795\n5  42051        Fayette County, Pennsylvania    129443        NA      51321\n6  42027         Centre County, Pennsylvania    158879        NA      64995\n7  42005      Armstrong County, Pennsylvania     65967        NA      56838\n8  42041     Cumberland County, Pennsylvania    257333        NA      77001\n9  42095    Northampton County, Pennsylvania    311359        NA      77103\n10 42127          Wayne County, Pennsylvania     51244        NA      56744\n   medincomeM medageE medageM labor_forceE labor_forceM\n1        1350    47.1     0.2       297611          354\n2        1363    46.2     0.2        62347          190\n3        1618    44.4     0.3        75849          196\n4        2881    45.2     0.1        21960           83\n5        1365    45.1     0.1       107462          252\n6        2522    33.5     0.3       137688          212\n7        2537    47.0     0.3        54898           95\n8        1942    40.5     0.2       210420          271\n9        1660    42.1     0.2       257106          386\n10       2673    48.4     0.2        43736          119\n                         geometry\n1  MULTIPOLYGON (((-79.90487 4...\n2  MULTIPOLYGON (((-79.41729 3...\n3  MULTIPOLYGON (((-76.9486 40...\n4  MULTIPOLYGON (((-76.2828 41...\n5  MULTIPOLYGON (((-80.01073 3...\n6  MULTIPOLYGON (((-78.37688 4...\n7  MULTIPOLYGON (((-79.69286 4...\n8  MULTIPOLYGON (((-77.62503 4...\n9  MULTIPOLYGON (((-75.60805 4...\n10 MULTIPOLYGON (((-75.5055 41...\n\n\n\n#all counties in the US\nall_counties_withgeo <- get_acs(geography = \"county\",\n                       variables = c(myvars),\n                       output = \"wide\",\n                       geometry = TRUE)\n\nGetting data from the 2017-2021 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\nall_counties_withgeo\n\nSimple feature collection with 3221 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -179.1489 ymin: 17.88328 xmax: 179.7785 ymax: 71.36516\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                              NAME totalpopE totalpopM medincomeE\n1  20161              Riley County, Kansas     72602        NA      53296\n2  19159             Ringgold County, Iowa      4739        NA      57700\n3  30009            Carbon County, Montana     10488        NA      63178\n4  16007           Bear Lake County, Idaho      6327        NA      60337\n5  55011         Buffalo County, Wisconsin     13314        NA      61167\n6  31185             York County, Nebraska     14164        NA      66337\n7  08037            Eagle County, Colorado     55693        NA      91338\n8  42129 Westmoreland County, Pennsylvania    355107        NA      64708\n9  40079         Le Flore County, Oklahoma     48436        NA      43049\n10 48053              Burnet County, Texas     48424        NA      65363\n   medincomeM medageE medageM labor_forceE labor_forceM\n1        2489    25.5     0.1        61693          196\n2        5058    44.3     1.0         3730           50\n3        4261    50.7     0.9         8827           58\n4        7039    38.9     1.1         4812           43\n5        2352    46.5     0.5        10945           44\n6        4128    39.5     1.2        11208           84\n7        4058    37.8     0.8        45189          204\n8        1350    47.1     0.2       297611          354\n9        1869    38.8     0.3        37963           99\n10       4694    44.7     0.3        39487          202\n                         geometry\n1  MULTIPOLYGON (((-96.96095 3...\n2  MULTIPOLYGON (((-94.47167 4...\n3  MULTIPOLYGON (((-109.7987 4...\n4  MULTIPOLYGON (((-111.6345 4...\n5  MULTIPOLYGON (((-92.08384 4...\n6  MULTIPOLYGON (((-97.82629 4...\n7  MULTIPOLYGON (((-107.1137 3...\n8  MULTIPOLYGON (((-79.90487 4...\n9  MULTIPOLYGON (((-95.05996 3...\n10 MULTIPOLYGON (((-98.45924 3...\n\n\n\n#remove MOE columns - they all end with \"M\"\npa_counties_withgeo <- pa_counties_withgeo %>%\n  select(-ends_with(\"M\"))\n\npa_counties_withgeo\n\nSimple feature collection with 67 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.51989 ymin: 39.7198 xmax: -74.68952 ymax: 42.26986\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                                NAME totalpopE medincomeE medageE\n1  42129   Westmoreland County, Pennsylvania    355107      64708    47.1\n2  42111       Somerset County, Pennsylvania     74331      54332    46.2\n3  42097 Northumberland County, Pennsylvania     91853      51005    44.4\n4  42131        Wyoming County, Pennsylvania     26389      62795    45.2\n5  42051        Fayette County, Pennsylvania    129443      51321    45.1\n6  42027         Centre County, Pennsylvania    158879      64995    33.5\n7  42005      Armstrong County, Pennsylvania     65967      56838    47.0\n8  42041     Cumberland County, Pennsylvania    257333      77001    40.5\n9  42095    Northampton County, Pennsylvania    311359      77103    42.1\n10 42127          Wayne County, Pennsylvania     51244      56744    48.4\n   labor_forceE                       geometry\n1        297611 MULTIPOLYGON (((-79.90487 4...\n2         62347 MULTIPOLYGON (((-79.41729 3...\n3         75849 MULTIPOLYGON (((-76.9486 40...\n4         21960 MULTIPOLYGON (((-76.2828 41...\n5        107462 MULTIPOLYGON (((-80.01073 3...\n6        137688 MULTIPOLYGON (((-78.37688 4...\n7         54898 MULTIPOLYGON (((-79.69286 4...\n8        210420 MULTIPOLYGON (((-77.62503 4...\n9        257106 MULTIPOLYGON (((-75.60805 4...\n10        43736 MULTIPOLYGON (((-75.5055 41...\n\n\n\n#remove that trailing \"E\"\ncolnames(pa_counties_withgeo) <- sub(\"E$\", \"\", colnames(pa_counties_withgeo)) # $ means end of string only\n\npa_counties_withgeo\n\nSimple feature collection with 67 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -80.51989 ymin: 39.7198 xmax: -74.68952 ymax: 42.26986\nGeodetic CRS:  NAD83\nFirst 10 features:\n   GEOID                                 NAM totalpop medincome medage\n1  42129   Westmoreland County, Pennsylvania   355107     64708   47.1\n2  42111       Somerset County, Pennsylvania    74331     54332   46.2\n3  42097 Northumberland County, Pennsylvania    91853     51005   44.4\n4  42131        Wyoming County, Pennsylvania    26389     62795   45.2\n5  42051        Fayette County, Pennsylvania   129443     51321   45.1\n6  42027         Centre County, Pennsylvania   158879     64995   33.5\n7  42005      Armstrong County, Pennsylvania    65967     56838   47.0\n8  42041     Cumberland County, Pennsylvania   257333     77001   40.5\n9  42095    Northampton County, Pennsylvania   311359     77103   42.1\n10 42127          Wayne County, Pennsylvania    51244     56744   48.4\n   labor_force                       geometry\n1       297611 MULTIPOLYGON (((-79.90487 4...\n2        62347 MULTIPOLYGON (((-79.41729 3...\n3        75849 MULTIPOLYGON (((-76.9486 40...\n4        21960 MULTIPOLYGON (((-76.2828 41...\n5       107462 MULTIPOLYGON (((-80.01073 3...\n6       137688 MULTIPOLYGON (((-78.37688 4...\n7        54898 MULTIPOLYGON (((-79.69286 4...\n8       210420 MULTIPOLYGON (((-77.62503 4...\n9       257106 MULTIPOLYGON (((-75.60805 4...\n10       43736 MULTIPOLYGON (((-75.5055 41...\n\n\nMapping Pennsylvania counties with mapview\n\nmapview(pa_counties_withgeo, zcol = \"labor_force\")\n\n\n\n\n\n\nCustomize colors\n\nmapview(pa_counties_withgeo, zcol = \"labor_force\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (67)! \nInterpolating color vector to match number of zcol values.\n\n\n\n\n\n\n\n\nmap_labor_force <- mapview(pa_counties_withgeo, zcol = \"labor_force\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n         alpha.regions = 1)\n\nWarning: Found less unique colors (9) than unique zcol values (67)! \nInterpolating color vector to match number of zcol values.\n\n\nCustomize labels\n\nmylabel <- glue::glue(\"{pa_counties_withgeo$NAM} \")\n\n\nmap_labor_force <- mapview(pa_counties_withgeo, zcol = \"labor_force\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Greens\"), \n         alpha.regions = 1,\n         label = mylabel)\n\nWarning: Found less unique colors (9) than unique zcol values (67)! \nInterpolating color vector to match number of zcol values.\n\n\nCustomize popups\n\nmypopup <- glue::glue(\"<strong>{pa_counties_withgeo$NAM}</strong><br />\n                      Total Population: {pa_counties_withgeo$totalpop}<br />\n                     Labor Force Population: {pa_counties_withgeo$labor_force}<br />\n                      Median Income: {pa_counties_withgeo$medincome}\") %>% \n  lapply(htmltools::HTML)\n\n# mylabel <- glue::glue(\"{all_data$State} {all_data$PctChange10_20}%\") %>%\n#   lapply(htmltools::HTML)\n\n\nhead(mypopup)\n\n[[1]]\n<strong>Westmoreland County, Pennsylvania</strong><br />\n Total Population: 355107<br />\nLabor Force Population: 297611<br />\n Median Income: 64708\n\n[[2]]\n<strong>Somerset County, Pennsylvania</strong><br />\n Total Population: 74331<br />\nLabor Force Population: 62347<br />\n Median Income: 54332\n\n[[3]]\n<strong>Northumberland County, Pennsylvania</strong><br />\n Total Population: 91853<br />\nLabor Force Population: 75849<br />\n Median Income: 51005\n\n[[4]]\n<strong>Wyoming County, Pennsylvania</strong><br />\n Total Population: 26389<br />\nLabor Force Population: 21960<br />\n Median Income: 62795\n\n[[5]]\n<strong>Fayette County, Pennsylvania</strong><br />\n Total Population: 129443<br />\nLabor Force Population: 107462<br />\n Median Income: 51321\n\n[[6]]\n<strong>Centre County, Pennsylvania</strong><br />\n Total Population: 158879<br />\nLabor Force Population: 137688<br />\n Median Income: 64995\n\n\n\nmap_labor_force <- mapview(pa_counties_withgeo, zcol = \"labor_force\", \n         col.regions = RColorBrewer::brewer.pal(9, \"Blues\"), \n         alpha.regions = 1,\n         popup = mypopup,\n          label = mylabel)\n\nWarning: Found less unique colors (9) than unique zcol values (67)! \nInterpolating color vector to match number of zcol values.\n\nmap_labor_force"
  }
]